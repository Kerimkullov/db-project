{"version":3,"sources":["components/layot/SignedInLink.js","store/actions/authActions.js","components/layot/SignedOutLink.js","components/layot/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","href","profile","initials","SignOutLink","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orederBy","limit","orderBy","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initialState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.978ad768.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignInLink = (props) => {\r\n    return (\r\n       <ul className=\"right\">\r\n           <li><NavLink to='/create'>New Project</NavLink></li>\r\n           <li><a onClick={props.signOut} href='/'>Log Out</a></li>\r\n           <li><NavLink to='/' className=\"btn btn-floating grey lighten-1\">\r\n               {props.profile.initials}\r\n               </NavLink></li>\r\n       </ul>\r\n    )\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignInLink);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        )\r\n        .then(()=> {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res) => {\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: \"SINGUP_SUCCESS\"})\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignOutLink = () => {\r\n    return (\r\n       <ul className=\"right\">\r\n           <li><NavLink to='/signup'>Signup</NavLink></li>\r\n           <li><NavLink to='/signin'>Login</NavLink></li>\r\n       </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLink;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignInLink from './SignedInLink';\r\nimport SignOutLink from './SignedOutLink';\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile   } =props;\r\n    const links = auth.uid ? <SignInLink profile={profile}/> : <SignOutLink/>\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo left\">MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"dark\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                    {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n           { projects && projects.map(project => {\r\n               return(\r\n                   <Link to={'/project/' + project.id } key={project.id}>\r\n                   <ProjectSummary project={project} />\r\n                   </Link>\r\n               )\r\n           })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orederBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props;\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n    if(project) {\r\n        return(\r\n         <div className=\"container section project-details\"> \r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action gret lighten-4 grey-text\">\r\n                    <div>{project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )} else {\r\n    return (\r\n     <div className=\"container center\">\r\n         <p>Loading...</p>\r\n     </div>  \r\n    )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if(auth.uid) return <Redirect to='/'/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn grey z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if(auth.uid) return <Redirect to=''/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn grey z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project, \r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        })\r\n        .then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }) \r\n        .catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err})\r\n        })\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: \"\",\r\n        content: \"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea id=\"content\" onChange={this.handleChange} className=\"materialize-textarea\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn grey z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layot/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n    <Navbar/>\n    <Switch>\n      <Route exact path='/' component={Dashboard}/>\n      <Route path='/project/:id' component={ProjectDetails}/>\n      <Route path='/signin' component={SignIn}/>\n      <Route path='/signup' component={SignUp}/>\n      <Route path='/create' component={CreateProject}/>\n    </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState={\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state, \r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signed out success')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup-success');\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup-error')\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: return state\r\n    }\r\n}\r\nexport default authReducer;","const initialState={\r\n    projects: [\r\n        {id: '1', title: 'bla bla', content: 'bla bla vla'},\r\n        {id: '2', title: 'bla bla', content: 'bla bla vla'},\r\n        {id: '3', title: 'bla bla', content: 'bla bla vla'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project)\r\n        return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;"," import firebase from 'firebase/app'\r\n import 'firebase/firestore'\r\n import 'firebase/auth'\r\n \r\n \r\n // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBKU18ijzlE3HIeS_Ti14wRgbtwhSsj1GQ\",\r\n    authDomain: \"db-project-e50b5.firebaseapp.com\",\r\n    databaseURL: \"https://db-project-e50b5.firebaseio.com\",\r\n    projectId: \"db-project-e50b5\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"959125830622\",\r\n    appId: \"1:959125830622:web:76e61b07b3841596\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore()\r\n//   firebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\nconst  store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk\n        .withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n        )\n    );\n\nstore.firebaseAuthIsReady.then(() => {\nReactDOM.render(\n    <Provider store={store}>\n        <App />   \n    </Provider>\n, document.getElementById('root'));\n})\n\nserviceWorker.unregister();\n"],"sourceRoot":""}